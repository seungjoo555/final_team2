<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.team2.dao.MemberDAO">


	<!-- =============================== INSERT =============================== -->

	<insert id="insertMember">
		INSERT INTO member(me_id, me_ms_state, me_ma_auth, me_pw, me_nickname, me_name, me_phone, me_address, me_type)
			VALUE(#{member.me_id}, "이용중", "일반", #{member.me_pw}, #{member.me_nickname}, #{member.me_name}, #{member.me_phone}, #{member.me_address}, 0)
	</insert>	
	
	<!-- =============================== DELETE =============================== -->
	
	<!-- 멤버 정보 삭제 -->
	<delete id="deleteMemberVO">
		delete from member where me_id = #{me_id}
	</delete>
	
	<!-- =============================== UPDATE =============================== -->	
	
	<update id="updateProfile">
		update member set me_interests = #{member.me_interests}, me_preferloc = #{member.me_preferloc}, me_prefertime = #{member.me_prefertime}, me_onoff = #{member.me_onoff}, me_intro = #{member.me_intro}
		where me_id = #{me_id}
	</update>
	<update id="updateMemberState">
		update member set me_ms_state = #{me_ms_state}
		where me_id = #{me_id}
	</update>
	<!-- 회원 정보 변경(상태, 권한) -->
	<update id="updateMember">
		update member set me_ma_auth = #{me.me_ma_auth}, me_ms_state = #{me.me_ms_state}
		where me_id = #{me.me_id}
	</update>

	<!-- =============================== SELECT =============================== -->	
	
	<select id="findMemberById" resultType="MemberVO">
		SELECT * FROM member WHERE me_id = #{id}
	</select>
	
	<select id="findMemberByNickname" resultType="MemberVO">
		SELECT * FROM member WHERE me_nickname = #{nickname}
	</select>
	
	<!-- 회원 정보 가져오기 -->
	<select id="selectMember" resultType="MemberVO">
		SELECT * FROM member WHERE me_id = #{me_id}
	</select>
	
	<!-- 회원 상태 리스트 가져오기 -->
	<select id="selectMemberStateList" resultType="String">
		select ms_state from member_state
	</select>
	
	<!-- 관리자 제외한 회원 전체 리스트 가져오기 -->
	<select id="selectAdminMemberList" resultType="MemberVO">
		select * from member 
		where me_ma_auth != "관리자"
		<choose>
			<when test='cri.type == "all" '>
				and me_id like concat('%', #{cri.search}, '%')
			</when>
			<when test='cri.type == "auth"'>
				and me_ma_auth like concat('%', #{cri.search}, '%')
			</when>
			<when test='cri.type == "state"'>
				and me_ms_state like concat('%', #{cri.search}, '%')
			</when>
		</choose>
		limit #{cri.pageStart}, #{cri.perPageNum}
		
	</select>
	
	<!-- 관리자 제외한 회원 전체 개수 -->
	<select id="selectAdminMemberTotalCount"  resultType="int">
		select count(*) from member 
			where me_ma_auth != "관리자"
			<choose>
				<when test='cri.type == "all" '>
					and me_id like concat('%', #{cri.search}, '%')
				</when>
				<when test='cri.type == "auth"'>
					and me_ma_auth like concat('%', #{cri.search}, '%')
				</when>
				<when test='cri.type == "state"'>
					and me_ms_state like concat('%', #{cri.search}, '%')
				</when>
			</choose>
	</select>
	
	<!-- 관리자 제외한 회원 권한 리스트 가져오기 -->
	<select id="selectMemberAuthList" resultType="String">
		select ma_auth from member_auth where ma_auth != "관리자"
	
	</select>

</mapper>