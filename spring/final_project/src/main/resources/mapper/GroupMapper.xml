<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.team2.dao.GroupDAO">
	
	<!-- =============================== SELECT =============================== -->
	

 	<select id="selectGroupList" resultType="RecruitVO">
        select recruit.*, me_nickname as recu_gome_me_nickname 
        from recruit
 			join
 				group_member on gome_go_num = recu_go_num
			join
				`member` on gome_me_id = me_id
			where  gome_type = 1
				<choose>
					<when test='cri.type == "study"'>
						and recu_type = 0
					</when>
					<when test='cri.type == "project"'>
						and recu_type = 1
					</when>
					<otherwise>
						and (recu_type = 0 or recu_type = 1)
					</otherwise>
				</choose>
			order by recu_num desc
			limit #{cri.pageStart}, #{cri.perPageNum}
 	</select>
 	<select id="selectGroupTotalCount" resultType="int">
 		select count(*) from recruit
 		where
			<choose>
				<when test='cri.type == "study"'>
					recu_type = 0
				</when>
				<when test='cri.type == "project"'>
					recu_type = 1
				</when>
				<otherwise>
					recu_type = 0 or recu_type = 1 
				</otherwise>
			</choose>
 	</select>

 	<select id="getGroupListById" resultType="GroupVO">
		SELECT go_num, go_name, go_time, go_update, COUNT(gome_me_id) as go_member_count 
			FROM `group`
				JOIN group_member ON go_num = gome_go_num
			WHERE go_num in (
				SELECT gome_go_num FROM group_member WHERE gome_me_id = #{id}
            ) 
            GROUP BY gome_go_num
            limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="getGroupByGoNum" resultType="GroupVO">
		SELECT `group`.*, gome_me_id as leader 
			FROM `group` 
				JOIN group_member ON go_num = gome_go_num
			WHERE gome_type = 1  AND go_num = #{num}; 
	</select>
	
	<select id="isGroupMember" resultType="Object">
		SELECT * FROM group_member WHERE gome_go_num = #{num} AND gome_me_id = #{id}
	</select>
	
	<select id="getRecentGroupBoard" resultType="GroupPostVO">
		SELECT group_post.*, me_nickname as nickname 
			FROM group_post 
				JOIN member ON me_id = gopo_gome_me_id
			WHERE gopo_gome_go_num = #{num}  
			ORDER BY gopo_date DESC 
			LIMIT #{count};
	</select>
 	
 	<select id="getCalendar" resultType="GroupCalendarVO">
 		SELECT * FROM group_calendar 
			WHERE gocal_go_num = #{num}
		    ORDER BY gocal_startdate 
 	</select>
 	
 	<select id="selectRecruit" resultType="RecruitVO">
 		select * from recruit where recu_num = #{num}
 	</select>
 	
 	<select id="selectGroupKing" resultType="MemberVO">
 		select * from member where me_id = 
 		(select gome_me_id from group_member where gome_go_num = #{recu_go_num} and gome_type = 1)
 	</select>
 	
 	<select id="selectCategoryList" resultType="TotalCategoryVO">
 		select
 			total_category.*,
 			progCt_name as toCt_progCt_name
 		from
 			total_category
 				join
 			programming_category on progCt_num = toCt_progCt_num
 		where
	        toCt_table_name = #{table} and toCt_table_pk = #{num}
 	</select>
 	
 	<select id="selectLanguageList" resultType="TotalLanguageVO">
 		select
 			total_language.*,
 			lang_name as toLg_lang_name
 		from
 			total_language
 				join
 			programming_language on lang_num = toLg_lang_num
 		where
 			toLg_table_name = #{table} and toLg_table_pk = #{num}
 	</select>
	
	<select id="getGroupTime" resultType="long">
		SELECT go_time FROM `group` WHERE go_num = #{num}  
	</select>
	
	<select id="selectStudyGroupList" resultType="GroupVO">
		SELECT final_team2.group.*, group_apply.goap_state as goap_state, recruit.recu_num as recu_num, recruit.recu_topic as recu_topic, recruit.recu_count as recu_count, `member`.me_nickname as recu_gome_me_nickname, group_member.*
		FROM final_team2.group
			LEFT JOIN group_apply ON go_num = goap_num
			LEFT JOIN group_member ON go_num = gome_go_num
			LEFT JOIN recruit ON go_num = recu_go_num
			LEFT JOIN `member` ON gome_me_id = me_id
		WHERE gome_me_id = #{me_id} and gome_type = '1'
	</select>
    
	<select id="getStudyApplyList" resultType="GroupVO">
		SELECT final_team2.group.*, group_apply.goap_state as goap_state, group_apply.goap_me_id as goap_me_id, recruit.recu_num as recu_num, 
	  		recruit.recu_topic as recu_topic, recruit.recu_count as recu_count
	  	FROM final_team2.group
	    	LEFT JOIN group_apply ON go_num = goap_go_num
	    	LEFT JOIN recruit ON go_num = recu_go_num
	  	WHERE goap_me_id = #{me_id}
	</select>

	<select id="selectGroupMemberCount" resultType="int" parameterType="int">
		select COUNT(*) FROM group_member WHERE gome_go_num = #{go_num}
	</select>
  
	<select id="getGroupPostByGoNum" resultType="GroupPostVO">
		SELECT group_post.*, me_nickname as nickname 
			FROM group_post 
				JOIN member ON me_id = gopo_gome_me_id
			WHERE gopo_gome_go_num = #{num} 
			ORDER BY gopo_date DESC
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="getMyGroupTotalCount" resultType="int">
		SELECT COUNT(*) FROM group_member WHERE gome_me_id = #{id}
	</select>
	
	<select id="getGroupPostTotalCount" resultType="int">
		SELECT COUNT(*) FROM group_post WHERE gopo_gome_go_num = #{num}
	</select>
	
	<select id="getGroupPostByGopoNum" resultType="GroupPostVO">
		SELECT * FROM group_post WHERE gopo_num = #{num}
	</select>
	
	<select id="checkWriter" resultType="GroupPostVO">
		SELECT * FROM group_post WHERE gopo_num = #{num} AND gopo_gome_me_id = #{id}
	</select>
	
	<select id="countGroupListById" resultType="GroupVO">
		SELECT go_num, go_name, go_time, go_update, COUNT(gome_me_id) as go_member_count 
			FROM `group`
				JOIN group_member ON go_num = gome_go_num
			WHERE go_num in (
				SELECT gome_go_num FROM group_member WHERE gome_me_id = #{me_id}
            ) 
           GROUP BY gome_go_num;
	</select>
	
	<select id="getApplyListByGoNum" resultType="GroupApplyVO">
		SELECT group_apply.*, me_nickname AS nickname 
			FROM group_apply 
				JOIN member ON me_id = goap_me_id
			WHERE goap_go_num = #{num}
			<choose>
				<when test='cri.type == "canceled"'>
					AND goap_state = -1
				</when>
				<when test='cri.type == "not-passed"'>
					AND goap_state = 0
				</when>
				<otherwise>
					
				</otherwise>
			</choose>
			LIMIT #{cri.pageStart}, #{cri.perPageNum}
			
	</select>
	
	<select id="getApplicantTotalCount" resultType="int">
		select COUNT(*) FROM group_apply WHERE goap_go_num = #{num}
	</select>
	
	<select id="getApplicationByGoap_num" resultType="GroupApplyVO">
		select * FROM group_apply WHERE goap_num = #{num}
	</select>
	
	<select id="getGroupMember" resultType="GroupMemberVO">
		SELECT  group_member.*, me_nickname AS nickname
			FROM group_member
					JOIN member ON me_id = gome_me_id
				WHERE gome_go_num = #{num}
			<choose>
				<when test='cri.type == "over-5"'>
					AND gome_warn >= 5
				</when>
				<otherwise>
					
				</otherwise>
			</choose>
			LIMIT #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="getGroupMemberTotalCount" resultType="int">
		SELECT COUNT(*) FROM group_member WHERE gome_go_num = #{num}
	</select>
	
	<select id="selectGroupListByGoNum" resultType="GroupVO">
		select *
		from `group`
			join recruit on go_num = recu_go_num
		where go_num = recu_go_num
	</select>
	
	<select id="selectGroupApply" resultType="GroupApplyVo">
		SELECT * 
		FROM group_apply
		WHERE goap_recu_num = #{num} and goap_me_id = #{me_id};
	</select>
	<!-- =============================== DELETE =============================== -->
	
	<delete id="deleteGroupPost">
		DELETE FROM group_post WHERE gopo_num = #{num}
	</delete>
	
	<delete id="deleteGroupCal">
		DELETE FROM group_calendar WHERE gocal_num = #{num}
	</delete>
	
	<delete id="quitGroup">
		DELETE FROM group_member WHERE gome_me_id = #{user.me_id} AND gome_go_num = #{num}
	</delete>
	
	<delete id="deleteGroupByGoNum">
		DELETE FROM `group` WHERE go_num = #{num}
	</delete>
	
	<!-- =============================== UPDATE =============================== -->	
	
	<update id="updateGoTime">
		UPDATE `group` 
			SET go_time = go_time + 1 
		WHERE go_num = #{num}
	</update>
	
	<update id="updateGroupPost">
		UPDATE group_post
			SET gopo_content = #{content}
		WHERE gopo_num = #{num}
	</update>
	
	<update id="updateGroupName">
		UPDATE `group`
			SET go_name = #{name}
		WHERE go_num = #{num}
	</update>
	
	<update id="updateGoap_stateSigned">
		UPDATE group_apply
			SET goap_state = 1
		WHERE goap_num = #{num}
	</update>
	
	<update id="updateGoap_stateCanceled">
		UPDATE group_apply
			SET goap_state = -1
		WHERE goap_num = #{num}
	</update>
	
	<update id="updateGroupMemberGome_warn">
		UPDATE group_member
			SET gome_warn = gome_warn + 1
		WHERE gome_go_num = #{num} AND gome_me_id = #{id}
	</update>
	
	<update id="updateGroupTimer">
		UPDATE `group`
			SET go_time = 0
		WHERE go_num = #{num}
	</update>
	
	<update id="updateGroupApply">
		UPDATE `group_apply` 
			SET `goap_content` = #{goap.goap_content}
		WHERE goap_num = #{goap.goap_num} and goap_me_id = #{me_id};	
	</update>
	
	<!-- =============================== INSERT =============================== -->	
	
	<insert id="insertGroupPost">
		INSERT INTO group_post(gopo_gome_go_num, gopo_gome_me_id, gopo_content, gopo_date) 
			VALUES(#{num}, #{writer}, #{content}, NOW());
	</insert>
	
	<insert id="insertGroupCal">
		INSERT INTO group_calendar(gocal_title, gocal_startdate, gocal_enddate, gocal_memo, gocal_me_id, gocal_go_num)
			VALUES(#{newSche.gocal_title},#{newSche.gocal_startdate}, #{newSche.gocal_enddate}, #{newSche.gocal_memo}, #{user.me_id}, #{num})
	</insert>
 	
 	<insert id="insertGroupApply">
 		INSERT INTO `group_apply`(goap_go_num, goap_recu_num, goap_content, goap_state, goap_me_id)
 			VALUES(#{group.go_num}, #{recu_num}, #{goap.goap_content}, '0', #{user.me_id})
 	</insert>
	
 	<insert id="insertGroupMember">
 		INSERT INTO group_member(gome_me_id, gome_go_num) VALUE(#{id}, #{num})
 	</insert>
 	
</mapper>